{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAW,EAAG,SAAS,gBAAgB,CAAC,WACxC,EAAQ,SAAS,aAAa,CAAC,kBAE/B,EAAgB,SAAC,CAAA,CAAc,CAArC,EACE,OAAQ,GACN,IAAK,aACH,GAAI,AAAgC,IAAhC,CAAC,EAAI,EAAM,QAAQ,EAAE,MAAM,CAC7B,OAGF,IAAM,EAAS,EAAM,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,GAE3C,EAAM,WAAW,CAAC,GAClB,KACF,KAAK,aAGH,AAFgB,EAAM,gBAAgB,CAE9B,MAAM,GACd,KACF,KAAK,gBACH,GAAI,AAAyC,IAAzC,CAAC,EAAI,EAAM,QAAQ,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CACtC,OAGD,EAAG,EAAM,QAAQ,EAAE,OAAO,CAAC,SAAC,CAA5B,EACC,IAAM,EAAgB,SAAS,aAAa,CAAC,MAE7C,EAAI,MAAM,CAAC,EACb,GACA,KACF,KAAK,gBACF,EAAG,EAAM,QAAQ,EAAE,OAAO,CAAC,SAAC,CAA5B,EAGC,AAFuB,EAAI,gBAAgB,CAE5B,MAAM,EACvB,EAKJ,CAEA,IAAM,EAAY,CAAE,EAAG,EAAM,QAAQ,EAAE,MAAM,CACvC,EAAY,CAAC,EAAI,EAAM,QAAQ,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,QAElD,AAAc,KAAd,EACF,CAAO,CAAC,EAAE,CAAC,YAAY,CAAC,WAAY,CAAA,IAIpC,CAAO,CAAC,EAAE,CAAC,eAAe,CAAC,YAGzB,GAAa,EACf,CAAO,CAAC,EAAE,CAAC,YAAY,CAAC,WAAY,CAAA,GAEpC,CAAO,CAAC,EAAE,CAAC,eAAe,CAAC,YAGzB,AAAc,KAAd,EACF,CAAO,CAAC,EAAE,CAAC,YAAY,CAAC,WAAY,CAAA,GAEpC,CAAO,CAAC,EAAE,CAAC,eAAe,CAAC,YAGzB,GAAa,EACf,CAAO,CAAC,EAAE,CAAC,YAAY,CAAC,WAAY,CAAA,GAEpC,CAAO,CAAC,EAAE,CAAC,eAAe,CAAC,aAGtB,CACT,EAEA,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAG/B,EAFoB,EAAO,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAEvB,EAC7B,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar buttons = _to_consumable_array(document.querySelectorAll(\"button\"));\nvar field = document.querySelector(\".field > tbody\");\nvar buttonActions = function(buttonAction, table) {\n    switch(buttonAction){\n        case \"append-row\":\n            if (+_to_consumable_array(field.children).length === 10) return;\n            var newRow = table.children[0].cloneNode(true);\n            table.appendChild(newRow);\n            break;\n        case \"remove-row\":\n            var lastRow = table.lastElementChild;\n            lastRow.remove();\n            break;\n        case \"append-column\":\n            if (+_to_consumable_array(field.children)[0].cells.length === 10) return;\n            _to_consumable_array(table.children).forEach(function(row) {\n                var newColumnCell = document.createElement(\"td\");\n                row.append(newColumnCell);\n            });\n            break;\n        case \"remove-column\":\n            _to_consumable_array(table.children).forEach(function(row) {\n                var lastColumnCell = row.lastElementChild;\n                lastColumnCell.remove();\n            });\n            break;\n        default:\n            break;\n    }\n    var rowsCount = +_to_consumable_array(field.children).length;\n    var colsCount = +_to_consumable_array(field.children)[0].cells.length;\n    if (rowsCount === 10) {\n        buttons[0].setAttribute(\"disabled\", true);\n        return table;\n    } else buttons[0].removeAttribute(\"disabled\");\n    if (rowsCount <= 2) buttons[1].setAttribute(\"disabled\", true);\n    else buttons[1].removeAttribute(\"disabled\");\n    if (colsCount === 10) buttons[2].setAttribute(\"disabled\", true);\n    else buttons[2].removeAttribute(\"disabled\");\n    if (colsCount <= 2) buttons[3].setAttribute(\"disabled\", true);\n    else buttons[3].removeAttribute(\"disabled\");\n    return table;\n};\nbuttons.forEach(function(button) {\n    button.addEventListener(\"click\", function() {\n        var buttonClass = button.className.split(\" \")[0];\n        buttonActions(buttonClass, field);\n    });\n});\n\n//# sourceMappingURL=index.0cfcb724.js.map\n","'use strict';\n\nconst buttons = [...document.querySelectorAll('button')];\nconst field = document.querySelector('.field > tbody');\n\nconst buttonActions = (buttonAction, table) => {\n  switch (buttonAction) {\n    case 'append-row':\n      if (+[...field.children].length === 10) {\n        return;\n      }\n\n      const newRow = table.children[0].cloneNode(true);\n\n      table.appendChild(newRow);\n      break;\n    case 'remove-row':\n      const lastRow = table.lastElementChild;\n\n      lastRow.remove();\n      break;\n    case 'append-column':\n      if (+[...field.children][0].cells.length === 10) {\n        return;\n      }\n\n      [...table.children].forEach((row) => {\n        const newColumnCell = document.createElement('td');\n\n        row.append(newColumnCell);\n      });\n      break;\n    case 'remove-column':\n      [...table.children].forEach((row) => {\n        const lastColumnCell = row.lastElementChild;\n\n        lastColumnCell.remove();\n      });\n      break;\n\n    default:\n      break;\n  }\n\n  const rowsCount = +[...field.children].length;\n  const colsCount = +[...field.children][0].cells.length;\n\n  if (rowsCount === 10) {\n    buttons[0].setAttribute('disabled', true);\n\n    return table;\n  } else {\n    buttons[0].removeAttribute('disabled');\n  }\n\n  if (rowsCount <= 2) {\n    buttons[1].setAttribute('disabled', true);\n  } else {\n    buttons[1].removeAttribute('disabled');\n  }\n\n  if (colsCount === 10) {\n    buttons[2].setAttribute('disabled', true);\n  } else {\n    buttons[2].removeAttribute('disabled');\n  }\n\n  if (colsCount <= 2) {\n    buttons[3].setAttribute('disabled', true);\n  } else {\n    buttons[3].removeAttribute('disabled');\n  }\n\n  return table;\n};\n\nbuttons.forEach((button) => {\n  button.addEventListener('click', () => {\n    const buttonClass = button.className.split(' ')[0];\n\n    buttonActions(buttonClass, field);\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","buttons","document","querySelectorAll","field","querySelector","buttonActions","buttonAction","table","children","newRow","cloneNode","appendChild","lastRow","lastElementChild","remove","cells","forEach","row","newColumnCell","createElement","append","lastColumnCell","rowsCount","colsCount","setAttribute","removeAttribute","button","addEventListener","className","split"],"version":3,"file":"index.0cfcb724.js.map"}